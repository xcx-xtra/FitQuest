@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">FitQuest</a> <!-- Properly close the <a> tag -->
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">
        <AuthorizeView>
            <Authorized>
                <li><a href="/dashboard">Dashboard</a></li>
                <li><a @onclick="Logout">Logout</a></li>
            </Authorized>
            <NotAuthorized>
                <li><a href="/login">Login</a></li>
                <li><a href="/register">Register</a></li>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    [Inject] public required IJSRuntime JS { get; set; } = default!;
    [Inject] public required NavigationManager Nav { get; set; } = default!;

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("localStorage.removeItem", "authToken");
        Nav.NavigateTo("/login", forceLoad: true);
    }
}
