@page "/admin"
@inject HttpClient Http
@using FitQuest.Shared.Models

<h2>🔧 Admin Panel</h2>

<h3>👥 Users</h3>
@if (users == null)
{
    <p>Loading users...</p>
}
else
{
    <ul>
        @foreach (var u in users)
        {
            <li>@u.UserName (@u.Email)</li>
        }
    </ul>
}

<h3>🏅 Create Badge</h3>
<input @bind="newBadge.Name" placeholder="Name" />
<input @bind="newBadge.Description" placeholder="Description" />
<input @bind="newBadge.IconUrl" placeholder="Icon URL" />
<button @onclick="CreateBadge">Create</button>

@if (badges != null)
{
    <h4>Existing Badges</h4>
    <ul>
        @foreach (var b in badges)
        {
            <li>@b.Name <button @onclick="() => DeleteBadge(b.Id)">Delete</button></li>
        }
    </ul>
}

@code {
    private List<UserDto>? users;
    private List<Badge>? badges;
    private BadgeDto newBadge = new();

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<List<UserDto>>("/api/admin/users");
        badges = await Http.GetFromJsonAsync<List<Badge>>("/api/admin/badges");
    }

    private async Task CreateBadge()
    {
        var response = await Http.PostAsJsonAsync("/api/admin/badges", newBadge);
        if (response.IsSuccessStatusCode)
        {
            newBadge = new();
            badges = await Http.GetFromJsonAsync<List<Badge>>("/api/admin/badges");
        }
    }

    private async Task DeleteBadge(int id)
    {
        await Http.DeleteAsync($"/api/admin/badges/{id}");
        badges = await Http.GetFromJsonAsync<List<Badge>>("/api/admin/badges");
    }

    public class UserDto
    {
        public string UserName { get; set; } = "";
        public string Email { get; set; } = "";
    }

    public class BadgeDto
    {
        public string Name { get; set; } = "";
        public string Description { get; set; } = "";
        public string IconUrl { get; set; } = "";
    }
}