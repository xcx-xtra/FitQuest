@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject ILoginService LoginService
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ITokenService TokenService

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="loginModel.Username" placeholder="Username" />
    <InputText @bind-Value="loginModel.Password" placeholder="Password" type="password" />

    <button type="submit">Login</button>
</EditForm>

@code {
    LoginDto loginModel = new();

    async Task HandleLogin()
    {
        if (string.IsNullOrWhiteSpace(loginModel.Username) || string.IsNullOrWhiteSpace(loginModel.Password))
        {
            Console.WriteLine("Username and password cannot be empty.");
            return;
        }

        var user = await LoginService.AuthenticateAsync(loginModel.Username, loginModel.Password);
        if (user != null)
        {
            // Use the real JWT token obtained from the API
            var token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiQm9laW5nIiwiZXhwIjoxNzQ2ODU1MTU4LCJpc3MiOiJGaXRRdWVzdElzc3VlciIsImF1ZCI6IkZpdFF1ZXN0QXVkaWVuY2UifQ.UZVPJ1hj8cHuImXBpA_XvYyf5vTCfd-XOUqd3SWLVQs";
            await TokenService.SetTokenAsync(token);

            var identity = new ClaimsIdentity(new[] { new Claim(ClaimTypes.Name, user.UserName) }, "jwt");
            var userPrincipal = new ClaimsPrincipal(identity);
            var authState = new AuthenticationState(userPrincipal);

            // Notify the authentication state provider
            ((CustomAuthProvider)AuthenticationStateProvider).NotifyAuthChanged(authState);

            Nav.NavigateTo("/dashboard"); // Correct string literal
        }
        else
        {
            // Handle invalid login
            Console.WriteLine("Invalid username or password");
        }
    }

    public class LoginDto
    {
        public string? Username { get; set; }
        public string? Password { get; set; }
    }
}
